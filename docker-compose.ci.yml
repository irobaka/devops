services:
  app:
    image: ${APP_IMAGE}
    environment:
      - APP_NAME=posts
      - APP_ENV=local
      - APP_KEY=base64:TxLOPsLeYEAzuIKnG1pA3gLMHwrtiKBkJfnj4OsqtOE=
      - APP_DEBUG=true
      - APP_URL=http://localhost
      - LOG_CHANNEL=stack
      - LOG_LEVEL=debug
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres-test
      - DB_PORT=5432
      - DB_DATABASE=devops
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - QUEUE_CONNECTION=sync
      - MAIL_MAILER=log
    depends_on:
#      update:
#        condition: service_started
      postgres-test:
        condition: service_healthy

#  update:
#    image: ${APP_IMAGE}
#    environment:
#      - APP_ENV=local
#      - APP_KEY=base64:TxLOPsLeYEAzuIKnG1pA3gLMHwrtiKBkJfnj4OsqtOE=
#      - APP_DEBUG=true
#      - LOG_CHANNEL=stack
#      - LOG_LEVEL=debug
#      - DB_CONNECTION=pgsql
#      - DB_HOST=postgres-test
#      - DB_PORT=5432
#      - DB_DATABASE=devops
#      - DB_USERNAME=${DB_USERNAME}
#      - DB_PASSWORD=${DB_PASSWORD}
#    command: sh -c "php artisan config:clear && ./update.sh"
#    depends_on:
#      postgres-test:
#        condition: service_healthy

  postgres-test:
    image: ${POSTGRES_IMAGE}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      PGUSER: ${DB_USERNAME}
      POSTGRES_DB: devops
