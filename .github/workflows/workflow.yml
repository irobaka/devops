name: Devops pipeline

on:
  push:
    branches: ['main']

env:
  APP_IMAGE: irobaka/devops-app:${{ github.sha }}
  SCHEDULER_IMAGE: irobaka/devops-scheduler:${{ github.sha }}
  WORKER_IMAGE: irobaka/devops-worker:${{ github.sha }}
  NGINX_IMAGE: irobaka/devops-nginx:${{ github.sha }}
  POSTGRES_IMAGE: irobaka/devops-postgres:${{ github.sha }}
  FRONTEND_IMAGE: irobaka/devops-frontend:${{ github.sha }}


jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build App image
        run: docker build -t $APP_IMAGE --target=prod --build-arg user=devops --build-arg uid=1000 -f docker/Dockerfile.php .

      - name: Build Postgres image
        run: docker build -t POSTGRES_IMAGE -f docker/Dockerfile.postgres .

      - name: Run phpstan
        run: docker run --rm -t $APP_IMAGE ./vendor/bin/phpstan analyze --memory-limit=1G

      - name: Run phpinsights
        run: docker run --rm -t $APP_IMAGE php artisan insights --no-interaction --min-quality=90 --min-complexity=90 --min-architecture=90 --min-style=90 --ansi --format=github-action

      - name: Run tests
        run: |
          docker-compose -f docker-compose.ci.yml up -d
          docker-compose -f docker-compose.ci.yml exec -T app php artisan test
          docker-compose -f docker-compose.ci.yml down

      - name: Build Scheduler image
        run: docker build -t $SCHEDULER_IMAGE --target=prod_scheduler --build-arg user=devops --build-arg uid=1000 -f docker/Dockerfile.php .

      - name: Build Worker image
        run: docker build -t $APP_IMAGE --target=prod_worker --build-arg user=devops --build-arg uid=1000 -f docker/Dockerfile.php .

      - name: Build Nginx image
        run: docker build -t $NGINX_IMAGE -f docker/Dockerfile.php .

      - name: Build Frontend image
        run: docker build -t $FRONTEND_IMAGE --target=prod -f docker/Dockerfile.frontend .

      - name: Push App Image
        run: docker push $APP_IMAGE

      - name: Push Scheduler Image
        run: docker push $SCHEDULER_IMAGE

      - name: Push Worker Image
        run: docker push $WORKER_IMAGE

      - name: Push Nginx Image
        run: docker push $NGINX_IMAGE

      - name: Push Frontend Image
        run: docker push $FRONTEND_IMAGE

      - name: Push Postgres Image
        run: docker push $POSTGRES_IMAGE
