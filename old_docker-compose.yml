version: "3.8"

volumes:
    devops_redis:
    devops_postgres:

services:
    app:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
            target: app
            args:
                user: devops
                uid: 1000
        volumes:
            - ./app:/usr/src/app
            - ./config:/usr/src/config
            - ./database:/usr/src/database
            - ./resources:/usr/src/resources
            - ./routes:/usr/src/routes
            - ./storage:/usr/src/storage
            - ./tests:/usr/src/tests
            - ./.env:/usr/src/.env
            - ./composer.json:/usr/src/composer.json
            - ./composer.lock:/usr/src/composer.lock
            - ./package.json:/usr/src/package.json
            - ./package-lock.json:/usr/src/package-lock.json
            - ./phpstan.neon.dist:/usr/src/phpstan.neon.dist
            - ./phpunit.xml:/usr/src/phpunit.xml
            - ./postcss.config.js:/usr/src/postcss.config.js
            - ./tailwind.config.js:/usr/src/tailwind.config.js
            - ./vite.config.js:/usr/src/vite.config.js
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
            migrate:
                condition: service_started

    redis:
        image: redis:7.2.4-alpine
        restart: unless-stopped
        volumes:
            - devops_redis:/data
        ports:
            - "63790:6379"
        healthcheck:
            test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
            interval: 10s
            timeout: 5s
            retries: 5

    postgres:
        image: postgres:15
        restart: unless-stopped
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USERNAME}
            PGUSER: ${DB_USERNAME}
            POSTGRES_DB: ${DB_DATABASE}
        volumes:
            - devops_postgres:/var/lib/postgresql/data
            - ./deployment/config/postgres/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql
        ports:
            - "54320:5432"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready" ]
            interval: 10s
            timeout: 5s
            retries: 5

    migrate:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
            args:
                user: devops
                uid: 1000
        restart: no
        command: sh -c "php /usr/src/artisan migrate --force"
        volumes:
            - ./.env:/usr/src/.env
        depends_on:
            postgres:
                condition: service_healthy

    nginx:
        image: nginx:1.26.0-alpine
        restart: unless-stopped
        volumes:
            - ./:/usr/src
            - ./deployment/config/nginx/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - "80:80"
        depends_on:
            app:
                condition: service_started

    frontend:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/frontend/Dockerfile
            target: dev
        volumes:
            - ./app:/usr/src/app
            - ./config:/usr/src/config
            - ./database:/usr/src/database
            - ./resources:/usr/src/resources
            - ./routes:/usr/src/routes
            - ./storage:/usr/src/storage
            - ./.env:/usr/src/.env
            - ./package.json:/usr/src/package.json
            - ./package-lock.json:/usr/src/package-lock.json
            - ./postcss.config.js:/usr/src/postcss.config.js
            - ./tailwind.config.js:/usr/src/tailwind.config.js
            - ./vite.config.js:/usr/src/vite.config.js
        depends_on:
            app:
                condition: service_started
